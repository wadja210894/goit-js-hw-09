{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAIpC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACtC,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACLN,EACFI,EAAQ,uBAAqBN,QAAiBC,OAE5CM,EAAK,sBAAoBP,QAAeC,MAAU,GAErDA,EAAM,G,CAXbL,EAAKa,iBAAiB,UAetB,SAAuBC,GACrBA,EAAMC,iBAEN,MAAMV,EAAQW,SAAShB,EAAKiB,SAASZ,MAAMa,OACrCC,EAAOH,SAAShB,EAAKiB,SAASE,KAAKD,OACnCE,EAASJ,SAAShB,EAAKiB,SAASG,OAAOF,OAE5C,GAAIE,GAAU,GAAKD,EAAO,GAAKd,EAAQ,EACtC,OAAOgB,EAAAvB,GAASwB,OAAOC,QAAQ,QAAS,2BAA4B,aAGtE,IAAK,IAAIC,EAAI,EAAGA,EAAIC,OAAOL,GAASI,GAAK,EACvCrB,EAAcqB,EAAI,EAAGC,OAAOpB,GAASoB,OAAON,GAAQK,GACjDE,MAAKR,IACJG,EAAAvB,GAAS6B,OAAOC,QAAQV,EAAM,IAE/BW,OAAMC,IACLT,EAAAvB,GAAS6B,OAAOJ,QAAQO,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', SubmitHandler);\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      } else {\n        reject(`❌ Rejected promise ${position} in ${delay}ms`);\n      }\n    }, delay);\n  });  \n};\n\nfunction SubmitHandler(event) {\n  event.preventDefault();\n\n  const delay = parseInt(form.elements.delay.value);\n  const step = parseInt(form.elements.step.value);\n  const amount = parseInt(form.elements.amount.value);\n\n   if (amount <= 0 || step < 0 || delay < 0) {\n    return Notiflix.Report.failure('Alert', 'Field values must be > 0', 'Try again');\n  }\n\n  for (let i = 0; i < Number(amount); i += 1) {\n    createPromise(i + 1, Number(delay) + Number(step) * i)\n      .then(value => {\n        Notiflix.Notify.success(value);\n      })\n      .catch(error => {\n        Notiflix.Notify.failure(error);\n      });\n  }\n};\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","addEventListener","event","preventDefault","parseInt","elements","value","step","amount","$parcel$interopDefault","Report","failure","i","Number","then","Notify","success","catch","error"],"version":3,"file":"03-promises.7f024dec.js.map"}